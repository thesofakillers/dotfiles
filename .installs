#!/usr/bin/env bash
# {{{ general
mkdir -p "$HOME/bin"
export PATH="$HOME/bin:$PATH"
# }}}

# {{{ conda/miniconda
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('~/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
  eval "$__conda_setup"
else
  if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
    . "$HOME/miniconda3/etc/profile.d/conda.sh"
  else
    export PATH="$HOME/miniconda3/bin:$PATH"
  fi
fi
unset __conda_setup
# <<< conda initialize <<<
# }}}

# {{{ fzf
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'
# }}}

# {{{ python poetry
export PATH="$HOME/.local/bin:$PATH"
# }}}

# {{{ node version manager (https://github.com/tj/n)
# using curl -L https://bit.ly/n-install | bash
export N_PREFIX="$HOME/n"
[[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"
# }}}

# {{{ LaTeX
export PATH="/Library/TeX/Distributions/.DefaultTeX/Contents/Programs/texbin:$PATH"
# }}}

# {{{ go
export GOPATH=/Users/$USER/go
export PATH=$GOPATH/bin:$PATH
# }}}

# {{{ macports
# MacPorts Installer addition on 2023-02-01_at_12:25:54: adding an appropriate PATH variable for use with MacPorts.
export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
# Finished adapting your PATH environment variable for use with MacPorts. }}}

# {{{ tree
alias tree='tree -I "node_modules|\.git|\.DS_Store|__pycache__|venv|\.venv|\.mypy_cache|\.pytest_cache|\.tox|\.vscode|\.idea|\.cache|\.ipynb_checkpoints"'
# }}}

# {{{ homebrew
if [ -d "/opt/homebrew" ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -x "/usr/local/bin/brew" ]; then
  eval "$(/usr/local/bin/brew shellenv)"
fi
export HOMEBREW_NO_AUTO_UPDATE=1
# brew python
# Check if `python` is not available in the PATH
if ! which python > /dev/null; then
  # Check if Homebrew is in /opt/homebrew or /usr/local and create the link in $HOME/bin
  if [ -x "/opt/homebrew/bin/python3" ]; then
    ln -s /opt/homebrew/bin/python3 "$HOME/bin/python"
  elif [ -x "/usr/local/bin/python3" ]; then
    ln -s /usr/local/bin/python3 "$HOME/bin/python"
  else
    echo "python3 not found in /opt/homebrew or /usr/local"
  fi
fi

# Check if `pip` is not available in the PATH
if ! which pip > /dev/null; then
  # Check if Homebrew is in /opt/homebrew or /usr/local and create the link in $HOME/bin
  if [ -x "/opt/homebrew/bin/pip3" ]; then
    ln -s /opt/homebrew/bin/pip3 "$HOME/bin/pip"
  elif [ -x "/usr/local/bin/pip3" ]; then
    ln -s /usr/local/bin/pip3 "$HOME/bin/pip"
  else
    echo "pip3 not found in /opt/homebrew or /usr/local"
  fi
fi
# }}}
